git control system

installation:
    git config --global user.name
    git config --global user.email
    
    check:
        git config user.name
        git config user.email

initialisation:
    first go to the directory with the command line.
    git init 
    
commit
    create a file or modify the file.
    git add filename.extention      (used to add the changes or modification in the branch)
    git commit -m "comment"         (used to do the final commit with the comment)
    
    
    it has got other way to add all files to the branch.
    git add .
    
    it has got other way to add all the files which have the same extention
    git add *.extention
    
    
git log:

    git log
    this command will show all the commits you have done up till now.
    
    git show
    this command will show all the commits with the detailed information in it
    
    they both are the logger for the git.
    
express commit:
    git commit -am "comment"
    this command is used to skip the git add command.
    warning  : this command does not include the files which are newly created.
    
    git ls-files            (used to see the files that have changes)
    

go back or rollback changes using checkout:
    git reset HEAD          (this command is used to undo the changes in the staging area. But it will not effect or go back the file.
    git checkout -- filename.extention          (this will undo the changes we made recently in the file that is stored in out local machine.)
    
    
sorting:
    this command is used to access the git log file in some neat way.
    
    git log --oneline --graph --decorate --all
    
    
alias:
    this command is used to create shortcuts for the git commands.
    git config --global alias.shortcut_name "command to be shortcuts"
    to run the shortcuts:
        git alias_name
        
**to edit a git config file we can use the following command.**
**git config --global --edit**

rename and delete files:
    rename:
        git mv file_name.extention new_file_name.extention
    delete:
        git rm file_name.extention


ignoring files:
    this option is preety useful as it hides or ignores the files which we do not want to send to git server.
    first create a file named ".gitignore"
    then add the file names of the files which we don't want to add to the server.
                                    OR
    in the gitignore file just add the extension of the files which we don't want to include for eg: "*.log"
    
    
branches:
    create a new branch:
        git checkout -b branchname
    switching branches:
        git checkout branchname
    merging the branch:
        git merge branchname

        
